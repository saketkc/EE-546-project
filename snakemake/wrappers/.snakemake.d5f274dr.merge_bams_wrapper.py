
######## Snakemake header ########
import sys; sys.path.append("/home/cmb-panasas2/skchoudh/software_frozen/anaconda27/envs/riboraptor/lib/python3.5/site-packages"); import pickle; snakemake = pickle.loads(b'\x80\x03csnakemake.script\nSnakemake\nq\x00)\x81q\x01}q\x02(X\x06\x00\x00\x00configq\x03}q\x04X\x0b\x00\x00\x00config_pathq\x05X\x1b\x00\x00\x00configs/GRCz10_SRP034750.pyq\x06sX\t\x00\x00\x00wildcardsq\x07csnakemake.io\nWildcards\nq\x08)\x81q\tX\t\x00\x00\x00SRX399822q\na}q\x0b(X\x06\x00\x00\x00_namesq\x0c}q\rX\x06\x00\x00\x00sampleq\x0eK\x00N\x86q\x0fsX\x06\x00\x00\x00sampleq\x10h\nubX\x06\x00\x00\x00paramsq\x11csnakemake.io\nParams\nq\x12)\x81q\x13X\x04\x00\x00\x00/tmpq\x14a}q\x15(h\x0c}q\x16X\x07\x00\x00\x00tmp_dirq\x17K\x00N\x86q\x18sh\x17h\x14ubX\x07\x00\x00\x00threadsq\x19K\x01X\x04\x00\x00\x00ruleq\x1aX\n\x00\x00\x00merge_bamsq\x1bX\t\x00\x00\x00resourcesq\x1ccsnakemake.io\nResources\nq\x1d)\x81q\x1e(K\x01K\x01e}q\x1f(h\x0c}q (X\x06\x00\x00\x00_nodesq!K\x00N\x86q"X\x06\x00\x00\x00_coresq#K\x01N\x86q$uh!K\x01h#K\x01ubX\x06\x00\x00\x00outputq%csnakemake.io\nOutputFiles\nq&)\x81q\'X\x12\x00\x00\x00bams/SRX399822.bamq(a}q)h\x0c}q*sbX\x05\x00\x00\x00inputq+csnakemake.io\nInputFiles\nq,)\x81q-(X\x17\x00\x00\x00bams_srr/SRR1062455.bamq.X\x17\x00\x00\x00bams_srr/SRR1062456.bamq/X\x17\x00\x00\x00bams_srr/SRR1062457.bamq0X\x17\x00\x00\x00bams_srr/SRR1062458.bamq1X\x17\x00\x00\x00bams_srr/SRR1062459.bamq2X\x17\x00\x00\x00bams_srr/SRR1062460.bamq3X\x17\x00\x00\x00bams_srr/SRR1062461.bamq4X\x17\x00\x00\x00bams_srr/SRR1062462.bamq5X\x17\x00\x00\x00bams_srr/SRR1062463.bamq6X\x17\x00\x00\x00bams_srr/SRR1062464.bamq7X\x17\x00\x00\x00bams_srr/SRR1062465.bamq8X\x17\x00\x00\x00bams_srr/SRR1062466.bamq9X\x17\x00\x00\x00bams_srr/SRR1062467.bamq:X\x17\x00\x00\x00bams_srr/SRR1062468.bamq;X\x17\x00\x00\x00bams_srr/SRR1062469.bamq<X\x17\x00\x00\x00bams_srr/SRR1062470.bamq=X\x17\x00\x00\x00bams_srr/SRR1062471.bamq>X\x17\x00\x00\x00bams_srr/SRR1062472.bamq?X\x17\x00\x00\x00bams_srr/SRR1062473.bamq@X\x17\x00\x00\x00bams_srr/SRR1062474.bamqAX\x17\x00\x00\x00bams_srr/SRR1062475.bamqBX\x17\x00\x00\x00bams_srr/SRR1062476.bamqCX\x17\x00\x00\x00bams_srr/SRR1062477.bamqDX\x17\x00\x00\x00bams_srr/SRR1062478.bamqEX\x17\x00\x00\x00bams_srr/SRR1062479.bamqFX\x17\x00\x00\x00bams_srr/SRR1062480.bamqGX\x17\x00\x00\x00bams_srr/SRR1062481.bamqHX\x17\x00\x00\x00bams_srr/SRR1062482.bamqIX\x17\x00\x00\x00bams_srr/SRR1062483.bamqJX\x17\x00\x00\x00bams_srr/SRR1062484.bamqKX\x17\x00\x00\x00bams_srr/SRR1062485.bamqLX\x17\x00\x00\x00bams_srr/SRR1062486.bamqMX\x17\x00\x00\x00bams_srr/SRR1062487.bamqNX\x17\x00\x00\x00bams_srr/SRR1062488.bamqOX\x17\x00\x00\x00bams_srr/SRR1062489.bamqPX\x17\x00\x00\x00bams_srr/SRR1062490.bamqQX\x17\x00\x00\x00bams_srr/SRR1062491.bamqRX\x17\x00\x00\x00bams_srr/SRR1062492.bamqSX\x17\x00\x00\x00bams_srr/SRR1062493.bamqTX\x17\x00\x00\x00bams_srr/SRR1062494.bamqUX\x17\x00\x00\x00bams_srr/SRR1062495.bamqVX\x17\x00\x00\x00bams_srr/SRR1062496.bamqWX\x17\x00\x00\x00bams_srr/SRR1062497.bamqXX\x17\x00\x00\x00bams_srr/SRR1062498.bamqYX\x17\x00\x00\x00bams_srr/SRR1062499.bamqZX\x17\x00\x00\x00bams_srr/SRR1062500.bamq[X\x17\x00\x00\x00bams_srr/SRR1062501.bamq\\X\x17\x00\x00\x00bams_srr/SRR1062502.bamq]X\x17\x00\x00\x00bams_srr/SRR1062503.bamq^X\x17\x00\x00\x00bams_srr/SRR1062504.bamq_X\x17\x00\x00\x00bams_srr/SRR1062505.bamq`X\x17\x00\x00\x00bams_srr/SRR1062506.bamqaX\x17\x00\x00\x00bams_srr/SRR1062507.bamqbX\x17\x00\x00\x00bams_srr/SRR1062508.bamqcX\x17\x00\x00\x00bams_srr/SRR1062509.bamqdX\x17\x00\x00\x00bams_srr/SRR1062510.bamqeX\x17\x00\x00\x00bams_srr/SRR1062511.bamqfX\x17\x00\x00\x00bams_srr/SRR1062512.bamqgX\x17\x00\x00\x00bams_srr/SRR1062513.bamqhX\x17\x00\x00\x00bams_srr/SRR1062514.bamqiX\x17\x00\x00\x00bams_srr/SRR1062515.bamqjX\x17\x00\x00\x00bams_srr/SRR1062516.bamqkX\x17\x00\x00\x00bams_srr/SRR1062517.bamqlX\x17\x00\x00\x00bams_srr/SRR1062518.bamqmX\x17\x00\x00\x00bams_srr/SRR1062519.bamqnX\x17\x00\x00\x00bams_srr/SRR1062520.bamqoX\x17\x00\x00\x00bams_srr/SRR1062521.bamqpX\x17\x00\x00\x00bams_srr/SRR1062522.bamqqX\x17\x00\x00\x00bams_srr/SRR1062523.bamqrX\x17\x00\x00\x00bams_srr/SRR1062524.bamqsX\x17\x00\x00\x00bams_srr/SRR1062525.bamqtX\x17\x00\x00\x00bams_srr/SRR1062526.bamquX\x17\x00\x00\x00bams_srr/SRR1062527.bamqvX\x17\x00\x00\x00bams_srr/SRR1062528.bamqwX\x17\x00\x00\x00bams_srr/SRR1062529.bamqxX\x17\x00\x00\x00bams_srr/SRR1062530.bamqyX\x17\x00\x00\x00bams_srr/SRR1062531.bamqzX\x17\x00\x00\x00bams_srr/SRR1062532.bamq{X\x17\x00\x00\x00bams_srr/SRR1062533.bamq|X\x17\x00\x00\x00bams_srr/SRR1062534.bamq}X\x17\x00\x00\x00bams_srr/SRR1062535.bamq~X\x17\x00\x00\x00bams_srr/SRR1062536.bamq\x7fX\x17\x00\x00\x00bams_srr/SRR1062537.bamq\x80X\x17\x00\x00\x00bams_srr/SRR1062538.bamq\x81X\x17\x00\x00\x00bams_srr/SRR1062539.bamq\x82X\x17\x00\x00\x00bams_srr/SRR1062540.bamq\x83X\x17\x00\x00\x00bams_srr/SRR1062541.bamq\x84X\x17\x00\x00\x00bams_srr/SRR1062542.bamq\x85X\x17\x00\x00\x00bams_srr/SRR1062543.bamq\x86X\x17\x00\x00\x00bams_srr/SRR1062544.bamq\x87X\x17\x00\x00\x00bams_srr/SRR1062545.bamq\x88X\x17\x00\x00\x00bams_srr/SRR1062546.bamq\x89X\x17\x00\x00\x00bams_srr/SRR1062547.bamq\x8aX\x17\x00\x00\x00bams_srr/SRR1062548.bamq\x8bX\x17\x00\x00\x00bams_srr/SRR1062549.bamq\x8cX\x17\x00\x00\x00bams_srr/SRR1062550.bamq\x8dX\x17\x00\x00\x00bams_srr/SRR1062551.bamq\x8eX\x17\x00\x00\x00bams_srr/SRR1062552.bamq\x8fX\x17\x00\x00\x00bams_srr/SRR1062553.bamq\x90X\x17\x00\x00\x00bams_srr/SRR1062554.bamq\x91e}q\x92h\x0c}q\x93sbX\x03\x00\x00\x00logq\x94csnakemake.io\nLog\nq\x95)\x81q\x96}q\x97h\x0c}q\x98sbub.'); from snakemake.logging import logger; logger.printshellcmds = True
######## Original script #########
import os
import tempfile
from snakemake.shell import shell

if len(snakemake.input) > 1:
    with tempfile.TemporaryDirectory(dir=snakemake.params.tmp_dir) as temp_dir:
        cmd = ' -in '.join(snakemake.input)
        shell(r'''bamtools merge -in {cmd} -out {snakemake.output}.unsorted \
              && samtools sort -@ {snakemake.threads} \
              -T {temp_dir}/{snakemake.wildcards.sample}_merge_bam \
              -o {snakemake.output} {snakemake.output}.unsorted \
              && samtools index {snakemake.output} \
              && yes | rm -rf {snakemake.output}.unsorted''')
elif len(snakemake.input) == 1:
    source = os.path.abspath(str(snakemake.input[0]))
    destination = os.path.abspath(str(snakemake.output))
    shell('''cp {source} {destination} && cp {source}.bai {destination}.bai''')
