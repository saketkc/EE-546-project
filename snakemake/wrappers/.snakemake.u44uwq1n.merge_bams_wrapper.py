
######## Snakemake header ########
import sys; sys.path.append("/home/cmb-panasas2/skchoudh/software_frozen/anaconda27/envs/riboraptor/lib/python3.5/site-packages"); import pickle; snakemake = pickle.loads(b'\x80\x03csnakemake.script\nSnakemake\nq\x00)\x81q\x01}q\x02(X\x04\x00\x00\x00ruleq\x03X\n\x00\x00\x00merge_bamsq\x04X\x07\x00\x00\x00threadsq\x05K\x01X\x06\x00\x00\x00configq\x06}q\x07X\x0b\x00\x00\x00config_pathq\x08X\x1b\x00\x00\x00configs/GRCz10_SRP034750.pyq\tsX\x03\x00\x00\x00logq\ncsnakemake.io\nLog\nq\x0b)\x81q\x0c}q\rX\x06\x00\x00\x00_namesq\x0e}q\x0fsbX\x06\x00\x00\x00paramsq\x10csnakemake.io\nParams\nq\x11)\x81q\x12X\x04\x00\x00\x00/tmpq\x13a}q\x14(h\x0e}q\x15X\x07\x00\x00\x00tmp_dirq\x16K\x00N\x86q\x17sh\x16h\x13ubX\t\x00\x00\x00resourcesq\x18csnakemake.io\nResources\nq\x19)\x81q\x1a(K\x01K\x01e}q\x1b(X\x06\x00\x00\x00_coresq\x1cK\x01X\x06\x00\x00\x00_nodesq\x1dK\x01h\x0e}q\x1e(h\x1dK\x00N\x86q\x1fh\x1cK\x01N\x86q uubX\t\x00\x00\x00wildcardsq!csnakemake.io\nWildcards\nq")\x81q#X\t\x00\x00\x00SRX399822q$a}q%(X\x06\x00\x00\x00sampleq&h$h\x0e}q\'X\x06\x00\x00\x00sampleq(K\x00N\x86q)subX\x06\x00\x00\x00outputq*csnakemake.io\nOutputFiles\nq+)\x81q,X\x12\x00\x00\x00bams/SRX399822.bamq-a}q.h\x0e}q/sbX\x05\x00\x00\x00inputq0csnakemake.io\nInputFiles\nq1)\x81q2(X\x17\x00\x00\x00bams_srr/SRR1062455.bamq3X\x17\x00\x00\x00bams_srr/SRR1062456.bamq4X\x17\x00\x00\x00bams_srr/SRR1062457.bamq5X\x17\x00\x00\x00bams_srr/SRR1062458.bamq6X\x17\x00\x00\x00bams_srr/SRR1062459.bamq7X\x17\x00\x00\x00bams_srr/SRR1062460.bamq8X\x17\x00\x00\x00bams_srr/SRR1062461.bamq9X\x17\x00\x00\x00bams_srr/SRR1062462.bamq:X\x17\x00\x00\x00bams_srr/SRR1062463.bamq;X\x17\x00\x00\x00bams_srr/SRR1062464.bamq<X\x17\x00\x00\x00bams_srr/SRR1062465.bamq=X\x17\x00\x00\x00bams_srr/SRR1062466.bamq>X\x17\x00\x00\x00bams_srr/SRR1062467.bamq?X\x17\x00\x00\x00bams_srr/SRR1062468.bamq@X\x17\x00\x00\x00bams_srr/SRR1062469.bamqAX\x17\x00\x00\x00bams_srr/SRR1062470.bamqBX\x17\x00\x00\x00bams_srr/SRR1062471.bamqCX\x17\x00\x00\x00bams_srr/SRR1062472.bamqDX\x17\x00\x00\x00bams_srr/SRR1062473.bamqEX\x17\x00\x00\x00bams_srr/SRR1062474.bamqFX\x17\x00\x00\x00bams_srr/SRR1062475.bamqGX\x17\x00\x00\x00bams_srr/SRR1062476.bamqHX\x17\x00\x00\x00bams_srr/SRR1062477.bamqIX\x17\x00\x00\x00bams_srr/SRR1062478.bamqJX\x17\x00\x00\x00bams_srr/SRR1062479.bamqKX\x17\x00\x00\x00bams_srr/SRR1062480.bamqLX\x17\x00\x00\x00bams_srr/SRR1062481.bamqMX\x17\x00\x00\x00bams_srr/SRR1062482.bamqNX\x17\x00\x00\x00bams_srr/SRR1062483.bamqOX\x17\x00\x00\x00bams_srr/SRR1062484.bamqPX\x17\x00\x00\x00bams_srr/SRR1062485.bamqQX\x17\x00\x00\x00bams_srr/SRR1062486.bamqRX\x17\x00\x00\x00bams_srr/SRR1062487.bamqSX\x17\x00\x00\x00bams_srr/SRR1062488.bamqTX\x17\x00\x00\x00bams_srr/SRR1062489.bamqUX\x17\x00\x00\x00bams_srr/SRR1062490.bamqVX\x17\x00\x00\x00bams_srr/SRR1062491.bamqWX\x17\x00\x00\x00bams_srr/SRR1062492.bamqXX\x17\x00\x00\x00bams_srr/SRR1062493.bamqYX\x17\x00\x00\x00bams_srr/SRR1062494.bamqZX\x17\x00\x00\x00bams_srr/SRR1062495.bamq[X\x17\x00\x00\x00bams_srr/SRR1062496.bamq\\X\x17\x00\x00\x00bams_srr/SRR1062497.bamq]X\x17\x00\x00\x00bams_srr/SRR1062498.bamq^X\x17\x00\x00\x00bams_srr/SRR1062499.bamq_X\x17\x00\x00\x00bams_srr/SRR1062500.bamq`X\x17\x00\x00\x00bams_srr/SRR1062501.bamqaX\x17\x00\x00\x00bams_srr/SRR1062502.bamqbX\x17\x00\x00\x00bams_srr/SRR1062503.bamqcX\x17\x00\x00\x00bams_srr/SRR1062504.bamqdX\x17\x00\x00\x00bams_srr/SRR1062505.bamqeX\x17\x00\x00\x00bams_srr/SRR1062506.bamqfX\x17\x00\x00\x00bams_srr/SRR1062507.bamqgX\x17\x00\x00\x00bams_srr/SRR1062508.bamqhX\x17\x00\x00\x00bams_srr/SRR1062509.bamqiX\x17\x00\x00\x00bams_srr/SRR1062510.bamqjX\x17\x00\x00\x00bams_srr/SRR1062511.bamqkX\x17\x00\x00\x00bams_srr/SRR1062512.bamqlX\x17\x00\x00\x00bams_srr/SRR1062513.bamqmX\x17\x00\x00\x00bams_srr/SRR1062514.bamqnX\x17\x00\x00\x00bams_srr/SRR1062515.bamqoX\x17\x00\x00\x00bams_srr/SRR1062516.bamqpX\x17\x00\x00\x00bams_srr/SRR1062517.bamqqX\x17\x00\x00\x00bams_srr/SRR1062518.bamqrX\x17\x00\x00\x00bams_srr/SRR1062519.bamqsX\x17\x00\x00\x00bams_srr/SRR1062520.bamqtX\x17\x00\x00\x00bams_srr/SRR1062521.bamquX\x17\x00\x00\x00bams_srr/SRR1062522.bamqvX\x17\x00\x00\x00bams_srr/SRR1062523.bamqwX\x17\x00\x00\x00bams_srr/SRR1062524.bamqxX\x17\x00\x00\x00bams_srr/SRR1062525.bamqyX\x17\x00\x00\x00bams_srr/SRR1062526.bamqzX\x17\x00\x00\x00bams_srr/SRR1062527.bamq{X\x17\x00\x00\x00bams_srr/SRR1062528.bamq|X\x17\x00\x00\x00bams_srr/SRR1062529.bamq}X\x17\x00\x00\x00bams_srr/SRR1062530.bamq~X\x17\x00\x00\x00bams_srr/SRR1062531.bamq\x7fX\x17\x00\x00\x00bams_srr/SRR1062532.bamq\x80X\x17\x00\x00\x00bams_srr/SRR1062533.bamq\x81X\x17\x00\x00\x00bams_srr/SRR1062534.bamq\x82X\x17\x00\x00\x00bams_srr/SRR1062535.bamq\x83X\x17\x00\x00\x00bams_srr/SRR1062536.bamq\x84X\x17\x00\x00\x00bams_srr/SRR1062537.bamq\x85X\x17\x00\x00\x00bams_srr/SRR1062538.bamq\x86X\x17\x00\x00\x00bams_srr/SRR1062539.bamq\x87X\x17\x00\x00\x00bams_srr/SRR1062540.bamq\x88X\x17\x00\x00\x00bams_srr/SRR1062541.bamq\x89X\x17\x00\x00\x00bams_srr/SRR1062542.bamq\x8aX\x17\x00\x00\x00bams_srr/SRR1062543.bamq\x8bX\x17\x00\x00\x00bams_srr/SRR1062544.bamq\x8cX\x17\x00\x00\x00bams_srr/SRR1062545.bamq\x8dX\x17\x00\x00\x00bams_srr/SRR1062546.bamq\x8eX\x17\x00\x00\x00bams_srr/SRR1062547.bamq\x8fX\x17\x00\x00\x00bams_srr/SRR1062548.bamq\x90X\x17\x00\x00\x00bams_srr/SRR1062549.bamq\x91X\x17\x00\x00\x00bams_srr/SRR1062550.bamq\x92X\x17\x00\x00\x00bams_srr/SRR1062551.bamq\x93X\x17\x00\x00\x00bams_srr/SRR1062552.bamq\x94X\x17\x00\x00\x00bams_srr/SRR1062553.bamq\x95X\x17\x00\x00\x00bams_srr/SRR1062554.bamq\x96e}q\x97h\x0e}q\x98sbub.'); from snakemake.logging import logger; logger.printshellcmds = True
######## Original script #########
import os
import tempfile
from snakemake.shell import shell

if len(snakemake.input) > 1:
    with tempfile.TemporaryDirectory(dir=snakemake.params.tmp_dir) as temp_dir:
        cmd = ' -in '.join(snakemake.input)
        shell(r'''bamtools merge -in {cmd} -out {snakemake.output}.unsorted \
              && samtools sort -@ {snakemake.threads} \
              -T {temp_dir}/{snakemake.wildcards.sample}_merge_bam \
              -o {snakemake.output} {snakemake.output}.unsorted \
              && samtools index {snakemake.output} \
              && yes | rm -rf {snakemake.output}.unsorted''')
elif len(snakemake.input) == 1:
    source = os.path.abspath(str(snakemake.input[0]))
    destination = os.path.abspath(str(snakemake.output))
    shell('''cp {source} {destination} && cp {source}.bai {destination}.bai''')
