
######## Snakemake header ########
import sys; sys.path.append("/home/cmb-panasas2/skchoudh/software_frozen/anaconda27/envs/riboraptor/lib/python3.5/site-packages"); import pickle; snakemake = pickle.loads(b'\x80\x03csnakemake.script\nSnakemake\nq\x00)\x81q\x01}q\x02(X\t\x00\x00\x00wildcardsq\x03csnakemake.io\nWildcards\nq\x04)\x81q\x05X\t\x00\x00\x00SRX399822q\x06a}q\x07(X\x06\x00\x00\x00_namesq\x08}q\tX\x06\x00\x00\x00sampleq\nK\x00N\x86q\x0bsX\x06\x00\x00\x00sampleq\x0ch\x06ubX\x03\x00\x00\x00logq\rcsnakemake.io\nLog\nq\x0e)\x81q\x0f}q\x10h\x08}q\x11sbX\x06\x00\x00\x00outputq\x12csnakemake.io\nOutputFiles\nq\x13)\x81q\x14X\x12\x00\x00\x00bams/SRX399822.bamq\x15a}q\x16h\x08}q\x17sbX\x05\x00\x00\x00inputq\x18csnakemake.io\nInputFiles\nq\x19)\x81q\x1a(X\x17\x00\x00\x00bams_srr/SRR1062455.bamq\x1bX\x17\x00\x00\x00bams_srr/SRR1062456.bamq\x1cX\x17\x00\x00\x00bams_srr/SRR1062457.bamq\x1dX\x17\x00\x00\x00bams_srr/SRR1062458.bamq\x1eX\x17\x00\x00\x00bams_srr/SRR1062459.bamq\x1fX\x17\x00\x00\x00bams_srr/SRR1062460.bamq X\x17\x00\x00\x00bams_srr/SRR1062461.bamq!X\x17\x00\x00\x00bams_srr/SRR1062462.bamq"X\x17\x00\x00\x00bams_srr/SRR1062463.bamq#X\x17\x00\x00\x00bams_srr/SRR1062464.bamq$X\x17\x00\x00\x00bams_srr/SRR1062465.bamq%X\x17\x00\x00\x00bams_srr/SRR1062466.bamq&X\x17\x00\x00\x00bams_srr/SRR1062467.bamq\'X\x17\x00\x00\x00bams_srr/SRR1062468.bamq(X\x17\x00\x00\x00bams_srr/SRR1062469.bamq)X\x17\x00\x00\x00bams_srr/SRR1062470.bamq*X\x17\x00\x00\x00bams_srr/SRR1062471.bamq+X\x17\x00\x00\x00bams_srr/SRR1062472.bamq,X\x17\x00\x00\x00bams_srr/SRR1062473.bamq-X\x17\x00\x00\x00bams_srr/SRR1062474.bamq.X\x17\x00\x00\x00bams_srr/SRR1062475.bamq/X\x17\x00\x00\x00bams_srr/SRR1062476.bamq0X\x17\x00\x00\x00bams_srr/SRR1062477.bamq1X\x17\x00\x00\x00bams_srr/SRR1062478.bamq2X\x17\x00\x00\x00bams_srr/SRR1062479.bamq3X\x17\x00\x00\x00bams_srr/SRR1062480.bamq4X\x17\x00\x00\x00bams_srr/SRR1062481.bamq5X\x17\x00\x00\x00bams_srr/SRR1062482.bamq6X\x17\x00\x00\x00bams_srr/SRR1062483.bamq7X\x17\x00\x00\x00bams_srr/SRR1062484.bamq8X\x17\x00\x00\x00bams_srr/SRR1062485.bamq9X\x17\x00\x00\x00bams_srr/SRR1062486.bamq:X\x17\x00\x00\x00bams_srr/SRR1062487.bamq;X\x17\x00\x00\x00bams_srr/SRR1062488.bamq<X\x17\x00\x00\x00bams_srr/SRR1062489.bamq=X\x17\x00\x00\x00bams_srr/SRR1062490.bamq>X\x17\x00\x00\x00bams_srr/SRR1062491.bamq?X\x17\x00\x00\x00bams_srr/SRR1062492.bamq@X\x17\x00\x00\x00bams_srr/SRR1062493.bamqAX\x17\x00\x00\x00bams_srr/SRR1062494.bamqBX\x17\x00\x00\x00bams_srr/SRR1062495.bamqCX\x17\x00\x00\x00bams_srr/SRR1062496.bamqDX\x17\x00\x00\x00bams_srr/SRR1062497.bamqEX\x17\x00\x00\x00bams_srr/SRR1062498.bamqFX\x17\x00\x00\x00bams_srr/SRR1062499.bamqGX\x17\x00\x00\x00bams_srr/SRR1062500.bamqHX\x17\x00\x00\x00bams_srr/SRR1062501.bamqIX\x17\x00\x00\x00bams_srr/SRR1062502.bamqJX\x17\x00\x00\x00bams_srr/SRR1062503.bamqKX\x17\x00\x00\x00bams_srr/SRR1062504.bamqLX\x17\x00\x00\x00bams_srr/SRR1062505.bamqMX\x17\x00\x00\x00bams_srr/SRR1062506.bamqNX\x17\x00\x00\x00bams_srr/SRR1062507.bamqOX\x17\x00\x00\x00bams_srr/SRR1062508.bamqPX\x17\x00\x00\x00bams_srr/SRR1062509.bamqQX\x17\x00\x00\x00bams_srr/SRR1062510.bamqRX\x17\x00\x00\x00bams_srr/SRR1062511.bamqSX\x17\x00\x00\x00bams_srr/SRR1062512.bamqTX\x17\x00\x00\x00bams_srr/SRR1062513.bamqUX\x17\x00\x00\x00bams_srr/SRR1062514.bamqVX\x17\x00\x00\x00bams_srr/SRR1062515.bamqWX\x17\x00\x00\x00bams_srr/SRR1062516.bamqXX\x17\x00\x00\x00bams_srr/SRR1062517.bamqYX\x17\x00\x00\x00bams_srr/SRR1062518.bamqZX\x17\x00\x00\x00bams_srr/SRR1062519.bamq[X\x17\x00\x00\x00bams_srr/SRR1062520.bamq\\X\x17\x00\x00\x00bams_srr/SRR1062521.bamq]X\x17\x00\x00\x00bams_srr/SRR1062522.bamq^X\x17\x00\x00\x00bams_srr/SRR1062523.bamq_X\x17\x00\x00\x00bams_srr/SRR1062524.bamq`X\x17\x00\x00\x00bams_srr/SRR1062525.bamqaX\x17\x00\x00\x00bams_srr/SRR1062526.bamqbX\x17\x00\x00\x00bams_srr/SRR1062527.bamqcX\x17\x00\x00\x00bams_srr/SRR1062528.bamqdX\x17\x00\x00\x00bams_srr/SRR1062529.bamqeX\x17\x00\x00\x00bams_srr/SRR1062530.bamqfX\x17\x00\x00\x00bams_srr/SRR1062531.bamqgX\x17\x00\x00\x00bams_srr/SRR1062532.bamqhX\x17\x00\x00\x00bams_srr/SRR1062533.bamqiX\x17\x00\x00\x00bams_srr/SRR1062534.bamqjX\x17\x00\x00\x00bams_srr/SRR1062535.bamqkX\x17\x00\x00\x00bams_srr/SRR1062536.bamqlX\x17\x00\x00\x00bams_srr/SRR1062537.bamqmX\x17\x00\x00\x00bams_srr/SRR1062538.bamqnX\x17\x00\x00\x00bams_srr/SRR1062539.bamqoX\x17\x00\x00\x00bams_srr/SRR1062540.bamqpX\x17\x00\x00\x00bams_srr/SRR1062541.bamqqX\x17\x00\x00\x00bams_srr/SRR1062542.bamqrX\x17\x00\x00\x00bams_srr/SRR1062543.bamqsX\x17\x00\x00\x00bams_srr/SRR1062544.bamqtX\x17\x00\x00\x00bams_srr/SRR1062545.bamquX\x17\x00\x00\x00bams_srr/SRR1062546.bamqvX\x17\x00\x00\x00bams_srr/SRR1062547.bamqwX\x17\x00\x00\x00bams_srr/SRR1062548.bamqxX\x17\x00\x00\x00bams_srr/SRR1062549.bamqyX\x17\x00\x00\x00bams_srr/SRR1062550.bamqzX\x17\x00\x00\x00bams_srr/SRR1062551.bamq{X\x17\x00\x00\x00bams_srr/SRR1062552.bamq|X\x17\x00\x00\x00bams_srr/SRR1062553.bamq}X\x17\x00\x00\x00bams_srr/SRR1062554.bamq~e}q\x7fh\x08}q\x80sbX\x06\x00\x00\x00configq\x81}q\x82X\x0b\x00\x00\x00config_pathq\x83X\x1b\x00\x00\x00configs/GRCz10_SRP034750.pyq\x84sX\x07\x00\x00\x00threadsq\x85K\x01X\x04\x00\x00\x00ruleq\x86X\n\x00\x00\x00merge_bamsq\x87X\t\x00\x00\x00resourcesq\x88csnakemake.io\nResources\nq\x89)\x81q\x8a(K\x01K\x01e}q\x8b(X\x06\x00\x00\x00_coresq\x8cK\x01h\x08}q\x8d(h\x8cK\x00N\x86q\x8eX\x06\x00\x00\x00_nodesq\x8fK\x01N\x86q\x90uh\x8fK\x01ubX\x06\x00\x00\x00paramsq\x91csnakemake.io\nParams\nq\x92)\x81q\x93X\x04\x00\x00\x00/tmpq\x94a}q\x95(X\x07\x00\x00\x00tmp_dirq\x96h\x94h\x08}q\x97h\x96K\x00N\x86q\x98subub.'); from snakemake.logging import logger; logger.printshellcmds = True
######## Original script #########
import os
import tempfile
from snakemake.shell import shell

if len(snakemake.input) > 1:
    with tempfile.TemporaryDirectory(dir=snakemake.params.tmp_dir) as temp_dir:
        cmd = ' -in '.join(snakemake.input)
        shell(r'''bamtools merge -in {cmd} -out {snakemake.output}.unsorted \
              && samtools sort -@ {snakemake.threads} \
              -T {temp_dir}/{snakemake.wildcards.sample}_merge_bam \
              -o {snakemake.output} {snakemake.output}.unsorted \
              && samtools index {snakemake.output} \
              && yes | rm -rf {snakemake.output}.unsorted''')
elif len(snakemake.input) == 1:
    source = os.path.abspath(str(snakemake.input[0]))
    destination = os.path.abspath(str(snakemake.output))
    shell('''cp {source} {destination} && cp {source}.bai {destination}.bai''')
