
######## Snakemake header ########
import sys; sys.path.append("/home/cmb-panasas2/skchoudh/software_frozen/anaconda27/envs/riboraptor/lib/python3.5/site-packages"); import pickle; snakemake = pickle.loads(b'\x80\x03csnakemake.script\nSnakemake\nq\x00)\x81q\x01}q\x02(X\x03\x00\x00\x00logq\x03csnakemake.io\nLog\nq\x04)\x81q\x05}q\x06X\x06\x00\x00\x00_namesq\x07}q\x08sbX\x04\x00\x00\x00ruleq\tX\n\x00\x00\x00merge_bamsq\nX\x06\x00\x00\x00outputq\x0bcsnakemake.io\nOutputFiles\nq\x0c)\x81q\rX\x12\x00\x00\x00bams/SRX399821.bamq\x0ea}q\x0fh\x07}q\x10sbX\t\x00\x00\x00resourcesq\x11csnakemake.io\nResources\nq\x12)\x81q\x13(K\x01K\x01e}q\x14(X\x06\x00\x00\x00_coresq\x15K\x01h\x07}q\x16(h\x15K\x00N\x86q\x17X\x06\x00\x00\x00_nodesq\x18K\x01N\x86q\x19uh\x18K\x01ubX\x06\x00\x00\x00configq\x1a}q\x1bX\x0b\x00\x00\x00config_pathq\x1cX\x1b\x00\x00\x00configs/GRCz10_SRP034750.pyq\x1dsX\t\x00\x00\x00wildcardsq\x1ecsnakemake.io\nWildcards\nq\x1f)\x81q X\t\x00\x00\x00SRX399821q!a}q"(h\x07}q#X\x06\x00\x00\x00sampleq$K\x00N\x86q%sX\x06\x00\x00\x00sampleq&h!ubX\x06\x00\x00\x00paramsq\'csnakemake.io\nParams\nq()\x81q)X\x04\x00\x00\x00/tmpq*a}q+(X\x07\x00\x00\x00tmp_dirq,h*h\x07}q-h,K\x00N\x86q.subX\x05\x00\x00\x00inputq/csnakemake.io\nInputFiles\nq0)\x81q1(X\x17\x00\x00\x00bams_srr/SRR1062396.bamq2X\x17\x00\x00\x00bams_srr/SRR1062397.bamq3X\x17\x00\x00\x00bams_srr/SRR1062398.bamq4X\x17\x00\x00\x00bams_srr/SRR1062399.bamq5X\x17\x00\x00\x00bams_srr/SRR1062400.bamq6X\x17\x00\x00\x00bams_srr/SRR1062401.bamq7X\x17\x00\x00\x00bams_srr/SRR1062402.bamq8X\x17\x00\x00\x00bams_srr/SRR1062403.bamq9X\x17\x00\x00\x00bams_srr/SRR1062404.bamq:X\x17\x00\x00\x00bams_srr/SRR1062405.bamq;X\x17\x00\x00\x00bams_srr/SRR1062406.bamq<X\x17\x00\x00\x00bams_srr/SRR1062407.bamq=X\x17\x00\x00\x00bams_srr/SRR1062408.bamq>X\x17\x00\x00\x00bams_srr/SRR1062409.bamq?X\x17\x00\x00\x00bams_srr/SRR1062410.bamq@X\x17\x00\x00\x00bams_srr/SRR1062411.bamqAX\x17\x00\x00\x00bams_srr/SRR1062412.bamqBX\x17\x00\x00\x00bams_srr/SRR1062413.bamqCX\x17\x00\x00\x00bams_srr/SRR1062414.bamqDX\x17\x00\x00\x00bams_srr/SRR1062415.bamqEX\x17\x00\x00\x00bams_srr/SRR1062416.bamqFX\x17\x00\x00\x00bams_srr/SRR1062417.bamqGX\x17\x00\x00\x00bams_srr/SRR1062418.bamqHX\x17\x00\x00\x00bams_srr/SRR1062419.bamqIX\x17\x00\x00\x00bams_srr/SRR1062420.bamqJX\x17\x00\x00\x00bams_srr/SRR1062421.bamqKX\x17\x00\x00\x00bams_srr/SRR1062422.bamqLX\x17\x00\x00\x00bams_srr/SRR1062423.bamqMX\x17\x00\x00\x00bams_srr/SRR1062424.bamqNX\x17\x00\x00\x00bams_srr/SRR1062425.bamqOX\x17\x00\x00\x00bams_srr/SRR1062426.bamqPX\x17\x00\x00\x00bams_srr/SRR1062427.bamqQX\x17\x00\x00\x00bams_srr/SRR1062428.bamqRX\x17\x00\x00\x00bams_srr/SRR1062429.bamqSX\x17\x00\x00\x00bams_srr/SRR1062430.bamqTX\x17\x00\x00\x00bams_srr/SRR1062431.bamqUX\x17\x00\x00\x00bams_srr/SRR1062432.bamqVX\x17\x00\x00\x00bams_srr/SRR1062433.bamqWX\x17\x00\x00\x00bams_srr/SRR1062434.bamqXX\x17\x00\x00\x00bams_srr/SRR1062435.bamqYX\x17\x00\x00\x00bams_srr/SRR1062436.bamqZX\x17\x00\x00\x00bams_srr/SRR1062437.bamq[X\x17\x00\x00\x00bams_srr/SRR1062438.bamq\\X\x17\x00\x00\x00bams_srr/SRR1062439.bamq]X\x17\x00\x00\x00bams_srr/SRR1062440.bamq^X\x17\x00\x00\x00bams_srr/SRR1062441.bamq_X\x17\x00\x00\x00bams_srr/SRR1062442.bamq`X\x17\x00\x00\x00bams_srr/SRR1062443.bamqaX\x17\x00\x00\x00bams_srr/SRR1062444.bamqbX\x17\x00\x00\x00bams_srr/SRR1062445.bamqcX\x17\x00\x00\x00bams_srr/SRR1062446.bamqdX\x17\x00\x00\x00bams_srr/SRR1062447.bamqeX\x17\x00\x00\x00bams_srr/SRR1062448.bamqfX\x17\x00\x00\x00bams_srr/SRR1062449.bamqgX\x17\x00\x00\x00bams_srr/SRR1062450.bamqhX\x17\x00\x00\x00bams_srr/SRR1062451.bamqiX\x17\x00\x00\x00bams_srr/SRR1062452.bamqjX\x17\x00\x00\x00bams_srr/SRR1062453.bamqkX\x17\x00\x00\x00bams_srr/SRR1062454.bamqle}qmh\x07}qnsbX\x07\x00\x00\x00threadsqoK\x01ub.'); from snakemake.logging import logger; logger.printshellcmds = True
######## Original script #########
import os
import tempfile
from snakemake.shell import shell

if len(snakemake.input) > 1:
    with tempfile.TemporaryDirectory(dir=snakemake.params.tmp_dir) as temp_dir:
        cmd = ' -in '.join(snakemake.input)
        shell(r'''bamtools merge -in {cmd} -out {snakemake.output}.unsorted \
              && samtools sort -@ {snakemake.threads} \
              -T {temp_dir}/{snakemake.wildcards.sample}_merge_bam \
              -o {snakemake.output} {snakemake.output}.unsorted \
              && samtools index {snakemake.output} \
              && yes | rm -rf {snakemake.output}.unsorted''')
elif len(snakemake.input) == 1:
    source = os.path.abspath(str(snakemake.input[0]))
    destination = os.path.abspath(str(snakemake.output))
    shell('''cp {source} {destination} && cp {source}.bai {destination}.bai''')
