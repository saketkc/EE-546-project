
######## Snakemake header ########
import sys; sys.path.append("/home/cmb-panasas2/skchoudh/software_frozen/anaconda27/envs/riboraptor/lib/python3.5/site-packages"); import pickle; snakemake = pickle.loads(b'\x80\x03csnakemake.script\nSnakemake\nq\x00)\x81q\x01}q\x02(X\x04\x00\x00\x00ruleq\x03X\n\x00\x00\x00merge_bamsq\x04X\x07\x00\x00\x00threadsq\x05K\x01X\t\x00\x00\x00resourcesq\x06csnakemake.io\nResources\nq\x07)\x81q\x08(K\x01K\x01e}q\t(X\x06\x00\x00\x00_nodesq\nK\x01X\x06\x00\x00\x00_namesq\x0b}q\x0c(h\nK\x00N\x86q\rX\x06\x00\x00\x00_coresq\x0eK\x01N\x86q\x0fuh\x0eK\x01ubX\x03\x00\x00\x00logq\x10csnakemake.io\nLog\nq\x11)\x81q\x12}q\x13h\x0b}q\x14sbX\x06\x00\x00\x00configq\x15}q\x16X\x0b\x00\x00\x00config_pathq\x17X\x1b\x00\x00\x00configs/GRCz10_SRP034750.pyq\x18sX\x06\x00\x00\x00outputq\x19csnakemake.io\nOutputFiles\nq\x1a)\x81q\x1bX\x12\x00\x00\x00bams/SRX399824.bamq\x1ca}q\x1dh\x0b}q\x1esbX\x06\x00\x00\x00paramsq\x1fcsnakemake.io\nParams\nq )\x81q!X\x04\x00\x00\x00/tmpq"a}q#(X\x07\x00\x00\x00tmp_dirq$h"h\x0b}q%h$K\x00N\x86q&subX\x05\x00\x00\x00inputq\'csnakemake.io\nInputFiles\nq()\x81q)(X\x17\x00\x00\x00bams_srr/SRR1062639.bamq*X\x17\x00\x00\x00bams_srr/SRR1062640.bamq+X\x17\x00\x00\x00bams_srr/SRR1062641.bamq,X\x17\x00\x00\x00bams_srr/SRR1062642.bamq-X\x17\x00\x00\x00bams_srr/SRR1062643.bamq.X\x17\x00\x00\x00bams_srr/SRR1062644.bamq/X\x17\x00\x00\x00bams_srr/SRR1062645.bamq0X\x17\x00\x00\x00bams_srr/SRR1062646.bamq1X\x17\x00\x00\x00bams_srr/SRR1062647.bamq2X\x17\x00\x00\x00bams_srr/SRR1062648.bamq3X\x17\x00\x00\x00bams_srr/SRR1062649.bamq4X\x17\x00\x00\x00bams_srr/SRR1062650.bamq5X\x17\x00\x00\x00bams_srr/SRR1062651.bamq6X\x17\x00\x00\x00bams_srr/SRR1062652.bamq7X\x17\x00\x00\x00bams_srr/SRR1062653.bamq8X\x17\x00\x00\x00bams_srr/SRR1062654.bamq9X\x17\x00\x00\x00bams_srr/SRR1062655.bamq:X\x17\x00\x00\x00bams_srr/SRR1062656.bamq;X\x17\x00\x00\x00bams_srr/SRR1062657.bamq<X\x17\x00\x00\x00bams_srr/SRR1062658.bamq=X\x17\x00\x00\x00bams_srr/SRR1062659.bamq>X\x17\x00\x00\x00bams_srr/SRR1062660.bamq?X\x17\x00\x00\x00bams_srr/SRR1062661.bamq@X\x17\x00\x00\x00bams_srr/SRR1062662.bamqAX\x17\x00\x00\x00bams_srr/SRR1062663.bamqBX\x17\x00\x00\x00bams_srr/SRR1062664.bamqCX\x17\x00\x00\x00bams_srr/SRR1062665.bamqDX\x17\x00\x00\x00bams_srr/SRR1062666.bamqEX\x17\x00\x00\x00bams_srr/SRR1062667.bamqFX\x17\x00\x00\x00bams_srr/SRR1062668.bamqGX\x17\x00\x00\x00bams_srr/SRR1062669.bamqHX\x17\x00\x00\x00bams_srr/SRR1062670.bamqIX\x17\x00\x00\x00bams_srr/SRR1062671.bamqJX\x17\x00\x00\x00bams_srr/SRR1062672.bamqKX\x17\x00\x00\x00bams_srr/SRR1062673.bamqLX\x17\x00\x00\x00bams_srr/SRR1062674.bamqMX\x17\x00\x00\x00bams_srr/SRR1062675.bamqNX\x17\x00\x00\x00bams_srr/SRR1062676.bamqOX\x17\x00\x00\x00bams_srr/SRR1062677.bamqPX\x17\x00\x00\x00bams_srr/SRR1062678.bamqQX\x17\x00\x00\x00bams_srr/SRR1062679.bamqRX\x17\x00\x00\x00bams_srr/SRR1062680.bamqSX\x17\x00\x00\x00bams_srr/SRR1062681.bamqTX\x17\x00\x00\x00bams_srr/SRR1062682.bamqUX\x17\x00\x00\x00bams_srr/SRR1062683.bamqVX\x17\x00\x00\x00bams_srr/SRR1062684.bamqWX\x17\x00\x00\x00bams_srr/SRR1062685.bamqXX\x17\x00\x00\x00bams_srr/SRR1062686.bamqYX\x17\x00\x00\x00bams_srr/SRR1062687.bamqZX\x17\x00\x00\x00bams_srr/SRR1062688.bamq[X\x17\x00\x00\x00bams_srr/SRR1062689.bamq\\X\x17\x00\x00\x00bams_srr/SRR1062690.bamq]X\x17\x00\x00\x00bams_srr/SRR1062691.bamq^X\x17\x00\x00\x00bams_srr/SRR1062692.bamq_X\x17\x00\x00\x00bams_srr/SRR1062693.bamq`X\x17\x00\x00\x00bams_srr/SRR1062694.bamqaX\x17\x00\x00\x00bams_srr/SRR1062695.bamqbX\x17\x00\x00\x00bams_srr/SRR1062696.bamqcX\x17\x00\x00\x00bams_srr/SRR1062697.bamqdX\x17\x00\x00\x00bams_srr/SRR1062698.bamqeX\x17\x00\x00\x00bams_srr/SRR1062699.bamqfX\x17\x00\x00\x00bams_srr/SRR1062700.bamqgX\x17\x00\x00\x00bams_srr/SRR1062701.bamqhX\x17\x00\x00\x00bams_srr/SRR1062702.bamqiX\x17\x00\x00\x00bams_srr/SRR1062703.bamqjX\x17\x00\x00\x00bams_srr/SRR1062704.bamqkX\x17\x00\x00\x00bams_srr/SRR1062705.bamqlX\x17\x00\x00\x00bams_srr/SRR1062706.bamqmX\x17\x00\x00\x00bams_srr/SRR1062707.bamqnX\x17\x00\x00\x00bams_srr/SRR1062708.bamqoX\x17\x00\x00\x00bams_srr/SRR1062709.bamqpX\x17\x00\x00\x00bams_srr/SRR1062710.bamqqX\x17\x00\x00\x00bams_srr/SRR1062711.bamqrX\x17\x00\x00\x00bams_srr/SRR1062712.bamqsX\x17\x00\x00\x00bams_srr/SRR1062713.bamqtX\x17\x00\x00\x00bams_srr/SRR1062714.bamquX\x17\x00\x00\x00bams_srr/SRR1062715.bamqvX\x17\x00\x00\x00bams_srr/SRR1062716.bamqwX\x17\x00\x00\x00bams_srr/SRR1062717.bamqxX\x17\x00\x00\x00bams_srr/SRR1062718.bamqyX\x17\x00\x00\x00bams_srr/SRR1062719.bamqzX\x17\x00\x00\x00bams_srr/SRR1062720.bamq{X\x17\x00\x00\x00bams_srr/SRR1062721.bamq|X\x17\x00\x00\x00bams_srr/SRR1062722.bamq}X\x17\x00\x00\x00bams_srr/SRR1062723.bamq~X\x17\x00\x00\x00bams_srr/SRR1062724.bamq\x7fX\x17\x00\x00\x00bams_srr/SRR1062725.bamq\x80X\x17\x00\x00\x00bams_srr/SRR1062726.bamq\x81X\x17\x00\x00\x00bams_srr/SRR1062727.bamq\x82X\x17\x00\x00\x00bams_srr/SRR1062728.bamq\x83X\x17\x00\x00\x00bams_srr/SRR1062729.bamq\x84X\x17\x00\x00\x00bams_srr/SRR1062730.bamq\x85X\x17\x00\x00\x00bams_srr/SRR1062731.bamq\x86X\x17\x00\x00\x00bams_srr/SRR1062732.bamq\x87X\x17\x00\x00\x00bams_srr/SRR1062733.bamq\x88X\x17\x00\x00\x00bams_srr/SRR1062734.bamq\x89X\x17\x00\x00\x00bams_srr/SRR1062735.bamq\x8aX\x17\x00\x00\x00bams_srr/SRR1062736.bamq\x8bX\x17\x00\x00\x00bams_srr/SRR1062737.bamq\x8cX\x17\x00\x00\x00bams_srr/SRR1062738.bamq\x8de}q\x8eh\x0b}q\x8fsbX\t\x00\x00\x00wildcardsq\x90csnakemake.io\nWildcards\nq\x91)\x81q\x92X\t\x00\x00\x00SRX399824q\x93a}q\x94(h\x0b}q\x95X\x06\x00\x00\x00sampleq\x96K\x00N\x86q\x97sX\x06\x00\x00\x00sampleq\x98h\x93ubub.'); from snakemake.logging import logger; logger.printshellcmds = True
######## Original script #########
import os
import tempfile
from snakemake.shell import shell

if len(snakemake.input) > 1:
    with tempfile.TemporaryDirectory(dir=snakemake.params.tmp_dir) as temp_dir:
        cmd = ' -in '.join(snakemake.input)
        shell(r'''bamtools merge -in {cmd} -out {snakemake.output}.unsorted \
              && samtools sort -@ {snakemake.threads} \
              -T {temp_dir}/{snakemake.wildcards.sample}_merge_bam \
              -o {snakemake.output} {snakemake.output}.unsorted \
              && samtools index {snakemake.output} \
              && yes | rm -rf {snakemake.output}.unsorted''')
elif len(snakemake.input) == 1:
    source = os.path.abspath(str(snakemake.input[0]))
    destination = os.path.abspath(str(snakemake.output))
    shell('''cp {source} {destination} && cp {source}.bai {destination}.bai''')
