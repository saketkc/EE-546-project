
######## Snakemake header ########
import sys; sys.path.append("/home/cmb-panasas2/skchoudh/software_frozen/anaconda27/envs/riboraptor/lib/python3.5/site-packages"); import pickle; snakemake = pickle.loads(b'\x80\x03csnakemake.script\nSnakemake\nq\x00)\x81q\x01}q\x02(X\x07\x00\x00\x00threadsq\x03K\x01X\t\x00\x00\x00resourcesq\x04csnakemake.io\nResources\nq\x05)\x81q\x06(K\x01K\x01e}q\x07(X\x06\x00\x00\x00_nodesq\x08K\x01X\x06\x00\x00\x00_coresq\tK\x01X\x06\x00\x00\x00_namesq\n}q\x0b(h\x08K\x00N\x86q\x0ch\tK\x01N\x86q\ruubX\x06\x00\x00\x00outputq\x0ecsnakemake.io\nOutputFiles\nq\x0f)\x81q\x10X\x12\x00\x00\x00bams/SRX399822.bamq\x11a}q\x12h\n}q\x13sbX\t\x00\x00\x00wildcardsq\x14csnakemake.io\nWildcards\nq\x15)\x81q\x16X\t\x00\x00\x00SRX399822q\x17a}q\x18(h\n}q\x19X\x06\x00\x00\x00sampleq\x1aK\x00N\x86q\x1bsX\x06\x00\x00\x00sampleq\x1ch\x17ubX\x04\x00\x00\x00ruleq\x1dX\n\x00\x00\x00merge_bamsq\x1eX\x06\x00\x00\x00configq\x1f}q X\x0b\x00\x00\x00config_pathq!X\x1b\x00\x00\x00configs/GRCz10_SRP034750.pyq"sX\x05\x00\x00\x00inputq#csnakemake.io\nInputFiles\nq$)\x81q%(X\x17\x00\x00\x00bams_srr/SRR1062455.bamq&X\x17\x00\x00\x00bams_srr/SRR1062456.bamq\'X\x17\x00\x00\x00bams_srr/SRR1062457.bamq(X\x17\x00\x00\x00bams_srr/SRR1062458.bamq)X\x17\x00\x00\x00bams_srr/SRR1062459.bamq*X\x17\x00\x00\x00bams_srr/SRR1062460.bamq+X\x17\x00\x00\x00bams_srr/SRR1062461.bamq,X\x17\x00\x00\x00bams_srr/SRR1062462.bamq-X\x17\x00\x00\x00bams_srr/SRR1062463.bamq.X\x17\x00\x00\x00bams_srr/SRR1062464.bamq/X\x17\x00\x00\x00bams_srr/SRR1062465.bamq0X\x17\x00\x00\x00bams_srr/SRR1062466.bamq1X\x17\x00\x00\x00bams_srr/SRR1062467.bamq2X\x17\x00\x00\x00bams_srr/SRR1062468.bamq3X\x17\x00\x00\x00bams_srr/SRR1062469.bamq4X\x17\x00\x00\x00bams_srr/SRR1062470.bamq5X\x17\x00\x00\x00bams_srr/SRR1062471.bamq6X\x17\x00\x00\x00bams_srr/SRR1062472.bamq7X\x17\x00\x00\x00bams_srr/SRR1062473.bamq8X\x17\x00\x00\x00bams_srr/SRR1062474.bamq9X\x17\x00\x00\x00bams_srr/SRR1062475.bamq:X\x17\x00\x00\x00bams_srr/SRR1062476.bamq;X\x17\x00\x00\x00bams_srr/SRR1062477.bamq<X\x17\x00\x00\x00bams_srr/SRR1062478.bamq=X\x17\x00\x00\x00bams_srr/SRR1062479.bamq>X\x17\x00\x00\x00bams_srr/SRR1062480.bamq?X\x17\x00\x00\x00bams_srr/SRR1062481.bamq@X\x17\x00\x00\x00bams_srr/SRR1062482.bamqAX\x17\x00\x00\x00bams_srr/SRR1062483.bamqBX\x17\x00\x00\x00bams_srr/SRR1062484.bamqCX\x17\x00\x00\x00bams_srr/SRR1062485.bamqDX\x17\x00\x00\x00bams_srr/SRR1062486.bamqEX\x17\x00\x00\x00bams_srr/SRR1062487.bamqFX\x17\x00\x00\x00bams_srr/SRR1062488.bamqGX\x17\x00\x00\x00bams_srr/SRR1062489.bamqHX\x17\x00\x00\x00bams_srr/SRR1062490.bamqIX\x17\x00\x00\x00bams_srr/SRR1062491.bamqJX\x17\x00\x00\x00bams_srr/SRR1062492.bamqKX\x17\x00\x00\x00bams_srr/SRR1062493.bamqLX\x17\x00\x00\x00bams_srr/SRR1062494.bamqMX\x17\x00\x00\x00bams_srr/SRR1062495.bamqNX\x17\x00\x00\x00bams_srr/SRR1062496.bamqOX\x17\x00\x00\x00bams_srr/SRR1062497.bamqPX\x17\x00\x00\x00bams_srr/SRR1062498.bamqQX\x17\x00\x00\x00bams_srr/SRR1062499.bamqRX\x17\x00\x00\x00bams_srr/SRR1062500.bamqSX\x17\x00\x00\x00bams_srr/SRR1062501.bamqTX\x17\x00\x00\x00bams_srr/SRR1062502.bamqUX\x17\x00\x00\x00bams_srr/SRR1062503.bamqVX\x17\x00\x00\x00bams_srr/SRR1062504.bamqWX\x17\x00\x00\x00bams_srr/SRR1062505.bamqXX\x17\x00\x00\x00bams_srr/SRR1062506.bamqYX\x17\x00\x00\x00bams_srr/SRR1062507.bamqZX\x17\x00\x00\x00bams_srr/SRR1062508.bamq[X\x17\x00\x00\x00bams_srr/SRR1062509.bamq\\X\x17\x00\x00\x00bams_srr/SRR1062510.bamq]X\x17\x00\x00\x00bams_srr/SRR1062511.bamq^X\x17\x00\x00\x00bams_srr/SRR1062512.bamq_X\x17\x00\x00\x00bams_srr/SRR1062513.bamq`X\x17\x00\x00\x00bams_srr/SRR1062514.bamqaX\x17\x00\x00\x00bams_srr/SRR1062515.bamqbX\x17\x00\x00\x00bams_srr/SRR1062516.bamqcX\x17\x00\x00\x00bams_srr/SRR1062517.bamqdX\x17\x00\x00\x00bams_srr/SRR1062518.bamqeX\x17\x00\x00\x00bams_srr/SRR1062519.bamqfX\x17\x00\x00\x00bams_srr/SRR1062520.bamqgX\x17\x00\x00\x00bams_srr/SRR1062521.bamqhX\x17\x00\x00\x00bams_srr/SRR1062522.bamqiX\x17\x00\x00\x00bams_srr/SRR1062523.bamqjX\x17\x00\x00\x00bams_srr/SRR1062524.bamqkX\x17\x00\x00\x00bams_srr/SRR1062525.bamqlX\x17\x00\x00\x00bams_srr/SRR1062526.bamqmX\x17\x00\x00\x00bams_srr/SRR1062527.bamqnX\x17\x00\x00\x00bams_srr/SRR1062528.bamqoX\x17\x00\x00\x00bams_srr/SRR1062529.bamqpX\x17\x00\x00\x00bams_srr/SRR1062530.bamqqX\x17\x00\x00\x00bams_srr/SRR1062531.bamqrX\x17\x00\x00\x00bams_srr/SRR1062532.bamqsX\x17\x00\x00\x00bams_srr/SRR1062533.bamqtX\x17\x00\x00\x00bams_srr/SRR1062534.bamquX\x17\x00\x00\x00bams_srr/SRR1062535.bamqvX\x17\x00\x00\x00bams_srr/SRR1062536.bamqwX\x17\x00\x00\x00bams_srr/SRR1062537.bamqxX\x17\x00\x00\x00bams_srr/SRR1062538.bamqyX\x17\x00\x00\x00bams_srr/SRR1062539.bamqzX\x17\x00\x00\x00bams_srr/SRR1062540.bamq{X\x17\x00\x00\x00bams_srr/SRR1062541.bamq|X\x17\x00\x00\x00bams_srr/SRR1062542.bamq}X\x17\x00\x00\x00bams_srr/SRR1062543.bamq~X\x17\x00\x00\x00bams_srr/SRR1062544.bamq\x7fX\x17\x00\x00\x00bams_srr/SRR1062545.bamq\x80X\x17\x00\x00\x00bams_srr/SRR1062546.bamq\x81X\x17\x00\x00\x00bams_srr/SRR1062547.bamq\x82X\x17\x00\x00\x00bams_srr/SRR1062548.bamq\x83X\x17\x00\x00\x00bams_srr/SRR1062549.bamq\x84X\x17\x00\x00\x00bams_srr/SRR1062550.bamq\x85X\x17\x00\x00\x00bams_srr/SRR1062551.bamq\x86X\x17\x00\x00\x00bams_srr/SRR1062552.bamq\x87X\x17\x00\x00\x00bams_srr/SRR1062553.bamq\x88X\x17\x00\x00\x00bams_srr/SRR1062554.bamq\x89e}q\x8ah\n}q\x8bsbX\x03\x00\x00\x00logq\x8ccsnakemake.io\nLog\nq\x8d)\x81q\x8e}q\x8fh\n}q\x90sbX\x06\x00\x00\x00paramsq\x91csnakemake.io\nParams\nq\x92)\x81q\x93X\x04\x00\x00\x00/tmpq\x94a}q\x95(X\x07\x00\x00\x00tmp_dirq\x96h\x94h\n}q\x97h\x96K\x00N\x86q\x98subub.'); from snakemake.logging import logger; logger.printshellcmds = True
######## Original script #########
import os
import tempfile
from snakemake.shell import shell

if len(snakemake.input) > 1:
    with tempfile.TemporaryDirectory(dir=snakemake.params.tmp_dir) as temp_dir:
        cmd = ' -in '.join(snakemake.input)
        shell(r'''bamtools merge -in {cmd} -out {snakemake.output}.unsorted \
              && samtools sort -@ {snakemake.threads} \
              -T {temp_dir}/{snakemake.wildcards.sample}_merge_bam \
              -o {snakemake.output} {snakemake.output}.unsorted \
              && samtools index {snakemake.output} \
              && yes | rm -rf {snakemake.output}.unsorted''')
elif len(snakemake.input) == 1:
    source = os.path.abspath(str(snakemake.input[0]))
    destination = os.path.abspath(str(snakemake.output))
    shell('''cp {source} {destination} && cp {source}.bai {destination}.bai''')
